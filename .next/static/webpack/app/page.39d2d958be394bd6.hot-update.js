"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/hero-section.tsx":
/*!*************************************!*\
  !*** ./components/hero-section.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst ProfessionalCircuitBackground = ()=>{\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const animationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [mousePos, setMousePos] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const [time, setTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // Professional tech color palette\n    const colors = {\n        primary: '#00f5ff',\n        secondary: '#0066ff',\n        accent: '#66d9ff',\n        highlight: '#ffffff',\n        glow: '#00ccff',\n        background: '#000511',\n        surface: '#0a0f1a',\n        glass: 'rgba(0, 245, 255, 0.1)'\n    };\n    const styles = {\n        container: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: \"\\n        radial-gradient(ellipse at 25% 25%, rgba(0, 102, 255, 0.15) 0%, transparent 50%),\\n        radial-gradient(ellipse at 75% 75%, rgba(0, 245, 255, 0.1) 0%, transparent 50%),\\n        linear-gradient(135deg, #000511 0%, #0a0f1a 50%, #000511 100%)\\n      \",\n            overflow: 'hidden',\n            zIndex: 1\n        },\n        canvas: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            filter: 'contrast(1.3) brightness(1.2) saturate(1.1)',\n            mixBlendMode: 'screen'\n        },\n        techGrid: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            backgroundImage: \"\\n        linear-gradient(rgba(0, 245, 255, 0.05) 1px, transparent 1px),\\n        linear-gradient(90deg, rgba(0, 245, 255, 0.05) 1px, transparent 1px),\\n        linear-gradient(rgba(0, 102, 255, 0.03) 1px, transparent 1px),\\n        linear-gradient(90deg, rgba(0, 102, 255, 0.03) 1px, transparent 1px)\\n      \",\n            backgroundSize: '100px 100px, 100px 100px, 25px 25px, 25px 25px',\n            animation: 'techGridFlow 40s linear infinite'\n        },\n        holographicLayer: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: \"\\n        conic-gradient(from 45deg at 30% 30%, \\n          rgba(0, 245, 255, 0.08) 0deg,\\n          transparent 90deg,\\n          rgba(0, 102, 255, 0.06) 180deg,\\n          transparent 270deg,\\n          rgba(0, 245, 255, 0.08) 360deg\\n        )\\n      \",\n            animation: 'holographicRotation 25s linear infinite',\n            filter: 'blur(1px)'\n        },\n        dataStreams: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: 'repeating-linear-gradient(0deg, transparent, transparent 3px, rgba(0, 245, 255, 0.02) 3px, rgba(0, 245, 255, 0.02) 6px)',\n            animation: 'dataFlow 0.15s linear infinite'\n        },\n        overlay: {\n            position: 'relative',\n            zIndex: 100,\n            minHeight: '100vh',\n            pointerEvents: 'none'\n        }\n    };\n    const cssAnimations = \"\\n    @keyframes techGridFlow {\\n      0% { transform: translate(0, 0) rotate(0deg); }\\n      25% { transform: translate(25px, 25px) rotate(0.5deg); }\\n      50% { transform: translate(50px, 50px) rotate(0deg); }\\n      75% { transform: translate(25px, 75px) rotate(-0.5deg); }\\n      100% { transform: translate(0, 100px) rotate(0deg); }\\n    }\\n    \\n    @keyframes holographicRotation {\\n      0% { transform: rotate(0deg) scale(1); filter: blur(1px) hue-rotate(0deg); }\\n      25% { transform: rotate(90deg) scale(1.05); filter: blur(0.5px) hue-rotate(15deg); }\\n      50% { transform: rotate(180deg) scale(1.1); filter: blur(1px) hue-rotate(30deg); }\\n      75% { transform: rotate(270deg) scale(1.05); filter: blur(0.5px) hue-rotate(15deg); }\\n      100% { transform: rotate(360deg) scale(1); filter: blur(1px) hue-rotate(0deg); }\\n    }\\n    \\n    @keyframes dataFlow {\\n      0% { transform: translateY(0px); }\\n      100% { transform: translateY(6px); }\\n    }\\n    \\n    @keyframes quantumPulse {\\n      0%, 100% { \\n        opacity: 0.4;\\n        transform: scale(1) rotate(0deg);\\n        filter: brightness(1) saturate(1);\\n      }\\n      25% { \\n        opacity: 0.8;\\n        transform: scale(1.1) rotate(2deg);\\n        filter: brightness(1.3) saturate(1.2);\\n      }\\n      50% { \\n        opacity: 1;\\n        transform: scale(1.2) rotate(0deg);\\n        filter: brightness(1.5) saturate(1.4);\\n      }\\n      75% { \\n        opacity: 0.8;\\n        transform: scale(1.1) rotate(-2deg);\\n        filter: brightness(1.3) saturate(1.2);\\n      }\\n    }\\n    \\n    .professional-overlay > * {\\n      pointer-events: auto;\\n    }\\n    \\n    @media (prefers-reduced-motion: reduce) {\\n      * {\\n        animation-duration: 0.01ms !important;\\n        animation-iteration-count: 1 !important;\\n      }\\n    }\\n  \";\n    // Advanced quantum particle system\n    class QuantumParticle {\n        update() {\n            this.x += this.vx;\n            this.y += this.vy;\n            this.life -= this.decay;\n            this.pulse += this.frequency;\n            this.energy += 0.015;\n            if (this.energy > 1) this.energy = 0;\n            // Quantum behavior - occasional teleportation\n            if (this.type === 'quantum' && Math.random() < 0.001) {\n                this.x = Math.random() * window.innerWidth;\n                this.y = Math.random() * window.innerHeight;\n            }\n        }\n        draw(ctx) {\n            if (this.life <= 0) return;\n            const alpha = this.life * (0.6 + Math.sin(this.pulse) * 0.4);\n            const size = this.size * (1 + Math.sin(this.pulse) * 0.3);\n            if (this.type === 'quantum') {\n                // Quantum particles with multiple layers\n                for(let i = 0; i < 3; i++){\n                    const layerSize = size * (3 - i) * 1.5;\n                    const layerAlpha = alpha / (i + 1);\n                    const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, layerSize);\n                    gradient.addColorStop(0, \"rgba(255, 255, 255, \".concat(layerAlpha, \")\"));\n                    gradient.addColorStop(0.3, \"rgba(0, 245, 255, \".concat(layerAlpha * 0.8, \")\"));\n                    gradient.addColorStop(0.7, \"rgba(0, 102, 255, \".concat(layerAlpha * 0.4, \")\"));\n                    gradient.addColorStop(1, 'rgba(0, 102, 255, 0)');\n                    ctx.fillStyle = gradient;\n                    ctx.beginPath();\n                    ctx.arc(this.x, this.y, layerSize, 0, Math.PI * 2);\n                    ctx.fill();\n                }\n                // Quantum core\n                ctx.fillStyle = \"rgba(255, 255, 255, \".concat(alpha, \")\");\n                ctx.beginPath();\n                ctx.arc(this.x, this.y, size * 0.3, 0, Math.PI * 2);\n                ctx.fill();\n            } else {\n                // Data particles\n                const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, size * 2);\n                gradient.addColorStop(0, \"rgba(0, 245, 255, \".concat(alpha, \")\"));\n                gradient.addColorStop(0.5, \"rgba(0, 102, 255, \".concat(alpha * 0.6, \")\"));\n                gradient.addColorStop(1, 'rgba(0, 102, 255, 0)');\n                ctx.fillStyle = gradient;\n                ctx.beginPath();\n                ctx.arc(this.x, this.y, size * 2, 0, Math.PI * 2);\n                ctx.fill();\n                ctx.fillStyle = \"rgba(102, 217, 255, \".concat(alpha, \")\");\n                ctx.beginPath();\n                ctx.arc(this.x, this.y, size, 0, Math.PI * 2);\n                ctx.fill();\n            }\n        }\n        constructor(x, y, type = 'data'){\n            this.x = x;\n            this.y = y;\n            this.vx = (Math.random() - 0.5) * 0.4;\n            this.vy = (Math.random() - 0.5) * 0.4;\n            this.size = type === 'quantum' ? Math.random() * 4 + 2 : Math.random() * 2 + 1;\n            this.life = 1;\n            this.decay = Math.random() * 0.003 + 0.001;\n            this.type = type;\n            this.pulse = Math.random() * Math.PI * 2;\n            this.energy = Math.random();\n            this.frequency = 0.03 + Math.random() * 0.02;\n        }\n    }\n    // Professional circuit node system\n    class ProfessionalNode {\n        getSize() {\n            switch(this.type){\n                case 'quantum_core':\n                    return 8;\n                case 'ai_processor':\n                    return 6;\n                case 'data_hub':\n                    return 5;\n                case 'neural_node':\n                    return 4;\n                default:\n                    return 3;\n            }\n        }\n        update(time) {\n            this.pulse += 0.025;\n            this.energy += 0.008;\n            if (this.energy > 1) this.energy = 0;\n            // Simulate processing activity\n            this.processingLoad += (Math.random() - 0.5) * 0.02;\n            this.processingLoad = Math.max(0, Math.min(1, this.processingLoad));\n            // Temperature simulation\n            this.temperature = 0.3 + this.processingLoad * 0.5 + Math.sin(time * 0.001) * 0.1;\n            // Activity bursts\n            if (Math.random() < 0.003) {\n                this.activity = 1;\n            }\n            this.activity *= 0.98;\n        }\n        draw(ctx, mouseDistance) {\n            const interactionBoost = Math.max(0, 1 - mouseDistance / 250);\n            const energyLevel = this.energy + interactionBoost * 0.6;\n            const baseSize = this.size * (1 + Math.sin(this.pulse) * 0.2);\n            const thermalGlow = this.temperature * 0.5;\n            // Professional multi-layer glow system\n            for(let i = 0; i < 5; i++){\n                const layerSize = baseSize * (5 - i) * 1.2;\n                const layerAlpha = 0.15 / (i + 1) * (1 + this.activity * 0.5 + thermalGlow);\n                const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, layerSize);\n                switch(this.type){\n                    case 'quantum_core':\n                        gradient.addColorStop(0, \"rgba(255, 255, 255, \".concat(layerAlpha * 1.5, \")\"));\n                        gradient.addColorStop(0.2, \"rgba(0, 245, 255, \".concat(layerAlpha * 1.2, \")\"));\n                        gradient.addColorStop(0.6, \"rgba(0, 102, 255, \".concat(layerAlpha * 0.8, \")\"));\n                        gradient.addColorStop(1, 'rgba(0, 102, 255, 0)');\n                        break;\n                    case 'ai_processor':\n                        gradient.addColorStop(0, \"rgba(102, 217, 255, \".concat(layerAlpha * 1.3, \")\"));\n                        gradient.addColorStop(0.3, \"rgba(0, 245, 255, \".concat(layerAlpha, \")\"));\n                        gradient.addColorStop(1, 'rgba(0, 245, 255, 0)');\n                        break;\n                    case 'data_hub':\n                        gradient.addColorStop(0, \"rgba(0, 245, 255, \".concat(layerAlpha * 1.1, \")\"));\n                        gradient.addColorStop(0.4, \"rgba(0, 102, 255, \".concat(layerAlpha * 0.7, \")\"));\n                        gradient.addColorStop(1, 'rgba(0, 102, 255, 0)');\n                        break;\n                    default:\n                        gradient.addColorStop(0, \"rgba(0, 245, 255, \".concat(layerAlpha, \")\"));\n                        gradient.addColorStop(0.5, \"rgba(0, 102, 255, \".concat(layerAlpha * 0.6, \")\"));\n                        gradient.addColorStop(1, 'rgba(0, 102, 255, 0)');\n                }\n                ctx.fillStyle = gradient;\n                ctx.beginPath();\n                ctx.arc(this.x, this.y, layerSize, 0, Math.PI * 2);\n                ctx.fill();\n            }\n            // Professional node core\n            let coreColor;\n            const coreIntensity = 0.8 + this.activity * 0.2 + this.processingLoad * 0.3;\n            switch(this.type){\n                case 'quantum_core':\n                    coreColor = \"rgba(255, 255, 255, \".concat(coreIntensity, \")\");\n                    break;\n                case 'ai_processor':\n                    coreColor = \"rgba(102, 217, 255, \".concat(coreIntensity, \")\");\n                    break;\n                case 'data_hub':\n                    coreColor = \"rgba(0, 245, 255, \".concat(coreIntensity, \")\");\n                    break;\n                default:\n                    coreColor = \"rgba(0, 245, 255, \".concat(coreIntensity * 0.9, \")\");\n            }\n            ctx.fillStyle = coreColor;\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, baseSize, 0, Math.PI * 2);\n            ctx.fill();\n            // Processing activity indicators\n            if (this.processingLoad > 0.7) {\n                ctx.strokeStyle = \"rgba(255, 255, 255, \".concat(this.processingLoad, \")\");\n                ctx.lineWidth = 2;\n                ctx.beginPath();\n                ctx.arc(this.x, this.y, baseSize * 1.8, 0, Math.PI * 2);\n                ctx.stroke();\n            }\n            // Quantum field visualization for quantum cores\n            if (this.type === 'quantum_core') {\n                for(let i = 0; i < 3; i++){\n                    const fieldRadius = baseSize * (2 + i);\n                    const fieldAlpha = 0.1 * Math.sin(this.pulse + i);\n                    ctx.strokeStyle = \"rgba(255, 255, 255, \".concat(Math.abs(fieldAlpha), \")\");\n                    ctx.lineWidth = 1;\n                    ctx.beginPath();\n                    ctx.arc(this.x, this.y, fieldRadius, 0, Math.PI * 2);\n                    ctx.stroke();\n                }\n            }\n        }\n        constructor(x, y, type = 'processor'){\n            this.x = x;\n            this.y = y;\n            this.type = type;\n            this.size = this.getSize();\n            this.energy = Math.random();\n            this.pulse = Math.random() * Math.PI * 2;\n            this.connections = [];\n            this.activity = 0;\n            this.processingLoad = Math.random();\n            this.temperature = 0.3 + Math.random() * 0.4;\n        }\n    }\n    // Advanced professional connection system\n    class ProfessionalConnection {\n        getThickness() {\n            const startImportance = this.start.type === 'quantum_core' ? 3 : this.start.type === 'ai_processor' ? 2 : 1;\n            const endImportance = this.end.type === 'quantum_core' ? 3 : this.end.type === 'ai_processor' ? 2 : 1;\n            return Math.max(startImportance, endImportance);\n        }\n        update(time) {\n            this.flow += this.flowSpeed;\n            this.energy += 0.004;\n            if (this.energy > 1) this.energy = 0;\n            // Generate professional data packets\n            const packetInterval = 800 / this.bandwidth;\n            if (time - this.lastPacket > packetInterval + Math.random() * 500) {\n                this.dataPackets.push({\n                    progress: 0,\n                    speed: 0.003 + Math.random() * 0.008,\n                    size: 2 + Math.random() * 4,\n                    life: 1,\n                    type: Math.random() > 0.8 ? 'priority' : 'standard',\n                    data: Math.random()\n                });\n                this.lastPacket = time;\n            }\n            // Update data packets with professional physics\n            this.dataPackets = this.dataPackets.filter((packet)=>{\n                packet.progress += packet.speed * this.bandwidth;\n                packet.life -= 0.001;\n                packet.data += 0.05;\n                return packet.progress < 1 && packet.life > 0;\n            });\n        }\n        draw(ctx) {\n            const dx = this.end.x - this.start.x;\n            const dy = this.end.y - this.start.y;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n            const opacity = 0.4 + this.energy * 0.5;\n            // Professional connection with gradient\n            const gradient = ctx.createLinearGradient(this.start.x, this.start.y, this.end.x, this.end.y);\n            gradient.addColorStop(0, \"rgba(0, 102, 255, \".concat(opacity * 0.6, \")\"));\n            gradient.addColorStop(0.3, \"rgba(0, 245, 255, \".concat(opacity, \")\"));\n            gradient.addColorStop(0.7, \"rgba(0, 245, 255, \".concat(opacity, \")\"));\n            gradient.addColorStop(1, \"rgba(0, 102, 255, \".concat(opacity * 0.6, \")\"));\n            ctx.strokeStyle = gradient;\n            ctx.lineWidth = this.thickness;\n            ctx.beginPath();\n            ctx.moveTo(this.start.x, this.start.y);\n            ctx.lineTo(this.end.x, this.end.y);\n            ctx.stroke();\n            // Professional data packet visualization\n            this.dataPackets.forEach((packet)=>{\n                const x = this.start.x + dx * packet.progress;\n                const y = this.start.y + dy * packet.progress;\n                const alpha = packet.life * (0.9 + Math.sin(packet.data * Math.PI * 2) * 0.1);\n                if (packet.type === 'priority') {\n                    // Priority packets are larger and brighter\n                    const priorityGradient = ctx.createRadialGradient(x, y, 0, x, y, packet.size * 3);\n                    priorityGradient.addColorStop(0, \"rgba(255, 255, 255, \".concat(alpha, \")\"));\n                    priorityGradient.addColorStop(0.3, \"rgba(0, 245, 255, \".concat(alpha * 0.8, \")\"));\n                    priorityGradient.addColorStop(1, 'rgba(0, 245, 255, 0)');\n                    ctx.fillStyle = priorityGradient;\n                    ctx.beginPath();\n                    ctx.arc(x, y, packet.size * 3, 0, Math.PI * 2);\n                    ctx.fill();\n                    ctx.fillStyle = \"rgba(255, 255, 255, \".concat(alpha, \")\");\n                    ctx.beginPath();\n                    ctx.arc(x, y, packet.size * 0.8, 0, Math.PI * 2);\n                    ctx.fill();\n                } else {\n                    // Standard packets\n                    const packetGradient = ctx.createRadialGradient(x, y, 0, x, y, packet.size * 2);\n                    packetGradient.addColorStop(0, \"rgba(0, 245, 255, \".concat(alpha, \")\"));\n                    packetGradient.addColorStop(0.5, \"rgba(102, 217, 255, \".concat(alpha * 0.6, \")\"));\n                    packetGradient.addColorStop(1, 'rgba(102, 217, 255, 0)');\n                    ctx.fillStyle = packetGradient;\n                    ctx.beginPath();\n                    ctx.arc(x, y, packet.size * 2, 0, Math.PI * 2);\n                    ctx.fill();\n                    ctx.fillStyle = \"rgba(102, 217, 255, \".concat(alpha, \")\");\n                    ctx.beginPath();\n                    ctx.arc(x, y, packet.size * 0.6, 0, Math.PI * 2);\n                    ctx.fill();\n                }\n            });\n        }\n        constructor(start, end){\n            this.start = start;\n            this.end = end;\n            this.flow = Math.random() * Math.PI * 2;\n            this.flowSpeed = 0.008 + Math.random() * 0.015;\n            this.thickness = this.getThickness();\n            this.energy = Math.random();\n            this.dataPackets = [];\n            this.lastPacket = 0;\n            this.bandwidth = Math.random() * 0.5 + 0.5;\n            this.latency = Math.random() * 100 + 50;\n        }\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ProfessionalCircuitBackground.useEffect\": ()=>{\n            const styleSheet = document.createElement('style');\n            styleSheet.textContent = cssAnimations;\n            document.head.appendChild(styleSheet);\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext('2d');\n            let nodes = [];\n            let connections = [];\n            let particles = [];\n            let animationTime = 0;\n            const resizeCanvas = {\n                \"ProfessionalCircuitBackground.useEffect.resizeCanvas\": ()=>{\n                    canvas.width = window.innerWidth;\n                    canvas.height = window.innerHeight;\n                    generateProfessionalNetwork();\n                }\n            }[\"ProfessionalCircuitBackground.useEffect.resizeCanvas\"];\n            const handleMouseMove = {\n                \"ProfessionalCircuitBackground.useEffect.handleMouseMove\": (e)=>{\n                    setMousePos({\n                        x: e.clientX,\n                        y: e.clientY\n                    });\n                }\n            }[\"ProfessionalCircuitBackground.useEffect.handleMouseMove\"];\n            const generateProfessionalNetwork = {\n                \"ProfessionalCircuitBackground.useEffect.generateProfessionalNetwork\": ()=>{\n                    nodes = [];\n                    connections = [];\n                    particles = [];\n                    const nodeCount = Math.floor(canvas.width * canvas.height / 30000);\n                    // Create professional node hierarchy\n                    for(let i = 0; i < nodeCount; i++){\n                        let type = 'processor';\n                        const rand = Math.random();\n                        if (rand > 0.98) type = 'quantum_core';\n                        else if (rand > 0.92) type = 'ai_processor';\n                        else if (rand > 0.85) type = 'data_hub';\n                        else if (rand > 0.75) type = 'neural_node';\n                        nodes.push(new ProfessionalNode(Math.random() * canvas.width, Math.random() * canvas.height, type));\n                    }\n                    // Create intelligent connections\n                    for(let i = 0; i < nodes.length; i++){\n                        for(let j = i + 1; j < nodes.length; j++){\n                            const dx = nodes[i].x - nodes[j].x;\n                            const dy = nodes[i].y - nodes[j].y;\n                            const distance = Math.sqrt(dx * dx + dy * dy);\n                            let connectionChance = 0.12;\n                            if (nodes[i].type === 'quantum_core' || nodes[j].type === 'quantum_core') connectionChance = 0.6;\n                            else if (nodes[i].type === 'ai_processor' || nodes[j].type === 'ai_processor') connectionChance = 0.4;\n                            else if (nodes[i].type === 'data_hub' || nodes[j].type === 'data_hub') connectionChance = 0.3;\n                            if (distance < 220 && Math.random() < connectionChance) {\n                                connections.push(new ProfessionalConnection(nodes[i], nodes[j]));\n                            }\n                        }\n                    }\n                    // Generate quantum and data particles\n                    for(let i = 0; i < 80; i++){\n                        const type = Math.random() > 0.85 ? 'quantum' : 'data';\n                        particles.push(new QuantumParticle(Math.random() * canvas.width, Math.random() * canvas.height, type));\n                    }\n                }\n            }[\"ProfessionalCircuitBackground.useEffect.generateProfessionalNetwork\"];\n            const animate = {\n                \"ProfessionalCircuitBackground.useEffect.animate\": ()=>{\n                    animationTime += 16;\n                    setTime(animationTime);\n                    // Professional background with depth\n                    const bgGradient = ctx.createRadialGradient(canvas.width * 0.3, canvas.height * 0.3, 0, canvas.width * 0.7, canvas.height * 0.7, Math.max(canvas.width, canvas.height) * 0.8);\n                    bgGradient.addColorStop(0, 'rgba(0, 5, 17, 0.98)');\n                    bgGradient.addColorStop(0.4, 'rgba(10, 15, 26, 0.99)');\n                    bgGradient.addColorStop(1, 'rgba(0, 5, 17, 1)');\n                    ctx.fillStyle = bgGradient;\n                    ctx.fillRect(0, 0, canvas.width, canvas.height);\n                    // Update and draw particles\n                    particles.forEach({\n                        \"ProfessionalCircuitBackground.useEffect.animate\": (particle, index)=>{\n                            particle.update();\n                            particle.draw(ctx);\n                            if (particle.life <= 0) {\n                                const type = Math.random() > 0.85 ? 'quantum' : 'data';\n                                particles[index] = new QuantumParticle(Math.random() * canvas.width, Math.random() * canvas.height, type);\n                            }\n                        }\n                    }[\"ProfessionalCircuitBackground.useEffect.animate\"]);\n                    // Update and draw connections\n                    connections.forEach({\n                        \"ProfessionalCircuitBackground.useEffect.animate\": (connection)=>{\n                            connection.update(animationTime);\n                            connection.draw(ctx);\n                        }\n                    }[\"ProfessionalCircuitBackground.useEffect.animate\"]);\n                    // Update and draw nodes\n                    nodes.forEach({\n                        \"ProfessionalCircuitBackground.useEffect.animate\": (node)=>{\n                            node.update(animationTime);\n                            const mouseDistance = Math.sqrt(Math.pow(node.x - mousePos.x, 2) + Math.pow(node.y - mousePos.y, 2));\n                            node.draw(ctx, mouseDistance);\n                        }\n                    }[\"ProfessionalCircuitBackground.useEffect.animate\"]);\n                    animationRef.current = requestAnimationFrame(animate);\n                }\n            }[\"ProfessionalCircuitBackground.useEffect.animate\"];\n            resizeCanvas();\n            window.addEventListener('resize', resizeCanvas);\n            window.addEventListener('mousemove', handleMouseMove);\n            animate();\n            return ({\n                \"ProfessionalCircuitBackground.useEffect\": ()=>{\n                    window.removeEventListener('resize', resizeCanvas);\n                    window.removeEventListener('mousemove', handleMouseMove);\n                    if (animationRef.current) {\n                        cancelAnimationFrame(animationRef.current);\n                    }\n                    document.head.removeChild(styleSheet);\n                }\n            })[\"ProfessionalCircuitBackground.useEffect\"];\n        }\n    }[\"ProfessionalCircuitBackground.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: styles.container,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: styles.holographicLayer\n            }, void 0, false, {\n                fileName: \"/Users/mahidharreddyg/Mahi/My Projects/Web Dev/my-portfolio/components/hero-section.tsx\",\n                lineNumber: 623,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: styles.techGrid\n            }, void 0, false, {\n                fileName: \"/Users/mahidharreddyg/Mahi/My Projects/Web Dev/my-portfolio/components/hero-section.tsx\",\n                lineNumber: 624,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: styles.dataStreams\n            }, void 0, false, {\n                fileName: \"/Users/mahidharreddyg/Mahi/My Projects/Web Dev/my-portfolio/components/hero-section.tsx\",\n                lineNumber: 625,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                style: styles.canvas\n            }, void 0, false, {\n                fileName: \"/Users/mahidharreddyg/Mahi/My Projects/Web Dev/my-portfolio/components/hero-section.tsx\",\n                lineNumber: 626,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: 'absolute',\n                    left: mousePos.x - 200,\n                    top: mousePos.y - 200,\n                    width: 400,\n                    height: 400,\n                    background: \"\\n            radial-gradient(circle, \\n              rgba(0, 245, 255, 0.12) 0%, \\n              rgba(0, 245, 255, 0.06) 30%, \\n              rgba(0, 102, 255, 0.03) 60%, \\n              transparent 80%\\n            )\\n          \",\n                    borderRadius: '50%',\n                    pointerEvents: 'none',\n                    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n                    filter: 'blur(2px)',\n                    mixBlendMode: 'screen'\n                }\n            }, void 0, false, {\n                fileName: \"/Users/mahidharreddyg/Mahi/My Projects/Web Dev/my-portfolio/components/hero-section.tsx\",\n                lineNumber: 629,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: styles.overlay,\n                className: \"professional-overlay\"\n            }, void 0, false, {\n                fileName: \"/Users/mahidharreddyg/Mahi/My Projects/Web Dev/my-portfolio/components/hero-section.tsx\",\n                lineNumber: 652,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/mahidharreddyg/Mahi/My Projects/Web Dev/my-portfolio/components/hero-section.tsx\",\n        lineNumber: 622,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ProfessionalCircuitBackground, \"9XOn3EILcDjv+9f2UxRK6kBY+Wk=\");\n_c = ProfessionalCircuitBackground;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ProfessionalCircuitBackground);\nvar _c;\n$RefreshReg$(_c, \"ProfessionalCircuitBackground\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/hero-section.tsx\n"));

/***/ })

});