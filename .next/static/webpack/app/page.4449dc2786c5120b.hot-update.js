"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/DecryptedText/DecryptedText.tsx":
/*!********************************************************!*\
  !*** ./src/components/DecryptedText/DecryptedText.tsx ***!
  \********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DecryptedText)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! framer-motion */ \"(app-pages-browser)/./node_modules/.pnpm/framer-motion@12.18.1_@emotion+is-prop-valid@1.3.1_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs\");\n\nvar _s = $RefreshSig$();\n\n\nfunction DecryptedText(param) {\n    let { text, speed = 50, maxIterations = 10, sequential = false, revealDirection = \"start\", useOriginalCharsOnly = false, characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*()_+\", className = \"\", parentClassName = \"\", encryptedClassName = \"\", animateOn = \"hover\", triggerAnimation = false, ...props } = param;\n    _s();\n    const [displayText, setDisplayText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(text);\n    const [isHovering, setIsHovering] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isScrambling, setIsScrambling] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [revealedIndices, setRevealedIndices] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Set());\n    const [hasAnimated, setHasAnimated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Handle external animation trigger\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DecryptedText.useEffect\": ()=>{\n            if (triggerAnimation) {\n                setIsHovering(true);\n            } else {\n                setIsHovering(false);\n            }\n        }\n    }[\"DecryptedText.useEffect\"], [\n        triggerAnimation\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DecryptedText.useEffect\": ()=>{\n            let interval;\n            let currentIteration = 0;\n            const getNextIndex = {\n                \"DecryptedText.useEffect.getNextIndex\": (revealedSet)=>{\n                    const textLength = text.length;\n                    switch(revealDirection){\n                        case \"start\":\n                            return revealedSet.size;\n                        case \"end\":\n                            return textLength - 1 - revealedSet.size;\n                        case \"center\":\n                            {\n                                const middle = Math.floor(textLength / 2);\n                                const offset = Math.floor(revealedSet.size / 2);\n                                const nextIndex = revealedSet.size % 2 === 0 ? middle + offset : middle - offset - 1;\n                                if (nextIndex >= 0 && nextIndex < textLength && !revealedSet.has(nextIndex)) {\n                                    return nextIndex;\n                                }\n                                for(let i = 0; i < textLength; i++){\n                                    if (!revealedSet.has(i)) return i;\n                                }\n                                return 0;\n                            }\n                        default:\n                            return revealedSet.size;\n                    }\n                }\n            }[\"DecryptedText.useEffect.getNextIndex\"];\n            const availableChars = useOriginalCharsOnly ? Array.from(new Set(text.split(\"\"))).filter({\n                \"DecryptedText.useEffect\": (char)=>char !== \" \"\n            }[\"DecryptedText.useEffect\"]) : characters.split(\"\");\n            const shuffleText = {\n                \"DecryptedText.useEffect.shuffleText\": (originalText, currentRevealed)=>{\n                    if (useOriginalCharsOnly) {\n                        const positions = originalText.split(\"\").map({\n                            \"DecryptedText.useEffect.shuffleText.positions\": (char, i)=>({\n                                    char,\n                                    isSpace: char === \" \",\n                                    index: i,\n                                    isRevealed: currentRevealed.has(i)\n                                })\n                        }[\"DecryptedText.useEffect.shuffleText.positions\"]);\n                        const nonSpaceChars = positions.filter({\n                            \"DecryptedText.useEffect.shuffleText.nonSpaceChars\": (p)=>!p.isSpace && !p.isRevealed\n                        }[\"DecryptedText.useEffect.shuffleText.nonSpaceChars\"]).map({\n                            \"DecryptedText.useEffect.shuffleText.nonSpaceChars\": (p)=>p.char\n                        }[\"DecryptedText.useEffect.shuffleText.nonSpaceChars\"]);\n                        for(let i = nonSpaceChars.length - 1; i > 0; i--){\n                            const j = Math.floor(Math.random() * (i + 1));\n                            [nonSpaceChars[i], nonSpaceChars[j]] = [\n                                nonSpaceChars[j],\n                                nonSpaceChars[i]\n                            ];\n                        }\n                        let charIndex = 0;\n                        return positions.map({\n                            \"DecryptedText.useEffect.shuffleText\": (p)=>{\n                                if (p.isSpace) return \" \";\n                                if (p.isRevealed) return originalText[p.index];\n                                return nonSpaceChars[charIndex++];\n                            }\n                        }[\"DecryptedText.useEffect.shuffleText\"]).join(\"\");\n                    } else {\n                        return originalText.split(\"\").map({\n                            \"DecryptedText.useEffect.shuffleText\": (char, i)=>{\n                                if (char === \" \") return \" \";\n                                if (currentRevealed.has(i)) return originalText[i];\n                                return availableChars[Math.floor(Math.random() * availableChars.length)];\n                            }\n                        }[\"DecryptedText.useEffect.shuffleText\"]).join(\"\");\n                    }\n                }\n            }[\"DecryptedText.useEffect.shuffleText\"];\n            if (isHovering) {\n                setIsScrambling(true);\n                interval = setInterval({\n                    \"DecryptedText.useEffect\": ()=>{\n                        setRevealedIndices({\n                            \"DecryptedText.useEffect\": (prevRevealed)=>{\n                                if (sequential) {\n                                    if (prevRevealed.size < text.length) {\n                                        const nextIndex = getNextIndex(prevRevealed);\n                                        const newRevealed = new Set(prevRevealed);\n                                        newRevealed.add(nextIndex);\n                                        setDisplayText(shuffleText(text, newRevealed));\n                                        return newRevealed;\n                                    } else {\n                                        clearInterval(interval);\n                                        setIsScrambling(false);\n                                        return prevRevealed;\n                                    }\n                                } else {\n                                    setDisplayText(shuffleText(text, prevRevealed));\n                                    currentIteration++;\n                                    if (currentIteration >= maxIterations) {\n                                        clearInterval(interval);\n                                        setIsScrambling(false);\n                                        setDisplayText(text);\n                                    }\n                                    return prevRevealed;\n                                }\n                            }\n                        }[\"DecryptedText.useEffect\"]);\n                    }\n                }[\"DecryptedText.useEffect\"], speed);\n            } else {\n                setDisplayText(text);\n                setRevealedIndices(new Set());\n                setIsScrambling(false);\n            }\n            return ({\n                \"DecryptedText.useEffect\": ()=>{\n                    if (interval) clearInterval(interval);\n                }\n            })[\"DecryptedText.useEffect\"];\n        }\n    }[\"DecryptedText.useEffect\"], [\n        isHovering,\n        text,\n        speed,\n        maxIterations,\n        sequential,\n        revealDirection,\n        characters,\n        useOriginalCharsOnly\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DecryptedText.useEffect\": ()=>{\n            if (animateOn !== \"view\") return;\n            const observerCallback = {\n                \"DecryptedText.useEffect.observerCallback\": (entries)=>{\n                    entries.forEach({\n                        \"DecryptedText.useEffect.observerCallback\": (entry)=>{\n                            if (entry.isIntersecting && !hasAnimated) {\n                                setIsHovering(true);\n                                setHasAnimated(true);\n                            }\n                        }\n                    }[\"DecryptedText.useEffect.observerCallback\"]);\n                }\n            }[\"DecryptedText.useEffect.observerCallback\"];\n            const observerOptions = {\n                root: null,\n                rootMargin: \"0px\",\n                threshold: 0.1\n            };\n            const observer = new IntersectionObserver(observerCallback, observerOptions);\n            const currentRef = containerRef.current;\n            if (currentRef) {\n                observer.observe(currentRef);\n            }\n            return ({\n                \"DecryptedText.useEffect\": ()=>{\n                    if (currentRef) observer.unobserve(currentRef);\n                }\n            })[\"DecryptedText.useEffect\"];\n        }\n    }[\"DecryptedText.useEffect\"], [\n        animateOn,\n        hasAnimated\n    ]);\n    const hoverProps = animateOn === \"hover\" && !triggerAnimation ? {\n        onMouseEnter: ()=>setIsHovering(true),\n        onMouseLeave: ()=>setIsHovering(false)\n    } : {};\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_2__.motion.span, {\n        ref: containerRef,\n        className: \"inline-block whitespace-pre-wrap \".concat(parentClassName),\n        ...hoverProps,\n        ...props,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"sr-only\",\n                children: displayText\n            }, void 0, false, {\n                fileName: \"/Users/mahidharreddyg/Mahi/My Projects/Web Dev/my-portfolio/src/components/DecryptedText/DecryptedText.tsx\",\n                lineNumber: 229,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: displayText.split(\"\").map((char, index)=>{\n                    const isRevealedOrDone = revealedIndices.has(index) || !isScrambling || !isHovering;\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: isRevealedOrDone ? className : encryptedClassName,\n                        children: char\n                    }, index, false, {\n                        fileName: \"/Users/mahidharreddyg/Mahi/My Projects/Web Dev/my-portfolio/src/components/DecryptedText/DecryptedText.tsx\",\n                        lineNumber: 237,\n                        columnNumber: 13\n                    }, this);\n                })\n            }, void 0, false, {\n                fileName: \"/Users/mahidharreddyg/Mahi/My Projects/Web Dev/my-portfolio/src/components/DecryptedText/DecryptedText.tsx\",\n                lineNumber: 231,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/mahidharreddyg/Mahi/My Projects/Web Dev/my-portfolio/src/components/DecryptedText/DecryptedText.tsx\",\n        lineNumber: 223,\n        columnNumber: 5\n    }, this);\n}\n_s(DecryptedText, \"7AUUaG4A3V1owYDyEza50BT8Qls=\");\n_c = DecryptedText;\nvar _c;\n$RefreshReg$(_c, \"DecryptedText\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/DecryptedText/DecryptedText.tsx\n"));

/***/ })

});